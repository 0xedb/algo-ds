class Solution {
public:
    string getPermutation(int n, int k) {
        vector<int> fact(n, 1), digits(n, 1);
        
        for(int i = 1; i < n; ++i) 
            fact[i] = fact[i - 1] * (i + 1), digits[i] = i + 1;
        
        string res{};
        while(res.size() < n - 1) {
            auto repeat = fact[fact.size() - 2];
            int next_digits = (k - 1) / repeat;
            res += to_string(digits[next_digits]); 
            digits.erase(digits.begin() + next_digits); 
            fact.pop_back();
            k %= repeat;
            
            if(!k) {
                for(int i = digits.size() - 1; i >= 0; --i) {
                    res += to_string(digits[i]);
                }
            }
        }
        
        if(res.size() < n) res += to_string(digits[0]);
        
        return res;
    }
};
